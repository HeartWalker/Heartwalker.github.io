<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HeartWalker&#39;s Blog</title>
  <subtitle>萌与正义</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://HeartWalker.cc/"/>
  <updated>2016-06-21T23:38:36.702Z</updated>
  <id>http://HeartWalker.cc/</id>
  
  <author>
    <name>Heart Walker</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS设计模式之策略模式</title>
    <link href="http://HeartWalker.cc/2016/06/22/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>http://HeartWalker.cc/2016/06/22/JS设计模式之策略模式/</id>
    <published>2016-06-21T23:38:36.000Z</published>
    <updated>2016-06-21T23:38:36.702Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端学习之好书推荐</title>
    <link href="http://HeartWalker.cc/2016/06/22/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%A5%BD%E4%B9%A6%E6%8E%A8%E8%8D%90/"/>
    <id>http://HeartWalker.cc/2016/06/22/前端学习之好书推荐/</id>
    <published>2016-06-21T22:44:02.000Z</published>
    <updated>2016-06-22T23:10:30.095Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&amp;lt;&amp;lt; JavaScript Dom 编程艺术 &amp;gt;&amp;gt; 目前(第二版)&lt;br&gt;轻松入门 开始学习javascript&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;lt;&amp;lt; JavaScript 高级程序设计 &amp;gt;&amp;gt; 目前(第三版)&lt;br&gt;绝对是学习JavaScript的神书, 全部学完以后带来的是质的飞越&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;lt;&amp;lt; 锋利的 jQuery &amp;gt;&amp;gt; 目前(第二版)&lt;br&gt;解决兼容性, 链式编程, 方便的 DOM 操作,完善的Ajax,一切从使用 jQuery开始&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;&amp;lt;&amp;lt; JavaScript Dom 编程艺术 &amp;gt;&amp;gt; 目前(第二版)&lt;br&gt;轻松入门 开始学习javascript&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;lt;&amp;lt; JavaScript 高级程序设计 &amp;gt;&amp;gt; 目前(第三版
    
    </summary>
    
      <category term="东成西就" scheme="http://HeartWalker.cc/categories/%E4%B8%9C%E6%88%90%E8%A5%BF%E5%B0%B1/"/>
    
    
  </entry>
  
  <entry>
    <title>JS设计模式之单例模式</title>
    <link href="http://HeartWalker.cc/2016/06/21/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://HeartWalker.cc/2016/06/21/JS设计模式之单例模式/</id>
    <published>2016-06-20T23:28:28.000Z</published>
    <updated>2016-06-22T23:15:26.022Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u5B9A_u4E49&quot;&gt;&lt;a href=&quot;#u5B9A_u4E49&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;p&gt;保证一个类仅有一个实例, 并提供一个访问它的全局访问点 &lt;/p&gt;
&lt;h3 id=&quot;u4E00_u4E2A_u7B80_u5355_u7684_u5355_u4F8B&quot;&gt;&lt;a href=&quot;#u4E00_u4E2A_u7B80_u5355_u7684_u5355_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;一个简单的单例&quot;&gt;&lt;/a&gt;一个简单的单例&lt;/h3&gt;&lt;p&gt;用一个变量标志当前是否已经为某个类创建过对象, 如果有,则在下一次获取该类的实例时直接返回之前创建的对象&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       var Singleton = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(name)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            this.instance = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Singleton.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            alert(this.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Singleton.getInstance = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(name)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!this.instance)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                this.instance = new Singleton(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; this.instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var a = Singleton.getInstance(&lt;span class=&quot;string&quot;&gt;&#39;sven1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var b = Singleton.getInstance(&lt;span class=&quot;string&quot;&gt;&#39;sven2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        console.log(a === b); //&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u60F0_u6027_u5355_u4F8B&quot;&gt;&lt;a href=&quot;#u60F0_u6027_u5355_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;惰性单例&quot;&gt;&lt;/a&gt;惰性单例&lt;/h3&gt;&lt;p&gt;惰性单例指的是在需要的时候才创建对象实例. 并且我没可以把单例的逻辑抽象出来, 形成通用的惰性单例&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //抽离出的单例逻辑&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var getSingle = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(fn)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       var result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; result || (result = fn.apply(this, arguments));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   //执行的函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   var createLoginLayer = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       var div = document.createElement(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       div.innerHTML =&lt;span class=&quot;string&quot;&gt;&#39;我是登录框&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       document.body.appendChild(div);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; div;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   var createSingleLoginLayer = getSingle(createLoginLayer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是一个创建登录框的案例, 我们可以在任何需要的时候调用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;createSingleLoginLayer();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;并且如果我们需要创建一个iframe 或其他 DOM 节点只需再写一个 执行的函数 ,并重用getSingle&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u5B9A_u4E49&quot;&gt;&lt;a href=&quot;#u5B9A_u4E49&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;p&gt;保证一个类仅有一个实例, 并提供一个访问它的全局访问点 &lt;/p&gt;
&lt;h3 id=&quot;u4E00_u4E2A
    
    </summary>
    
      <category term="设计模式" scheme="http://HeartWalker.cc/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://HeartWalker.cc/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>gulp参考</title>
    <link href="http://HeartWalker.cc/2016/06/16/gulp%E5%8F%82%E8%80%83/"/>
    <id>http://HeartWalker.cc/2016/06/16/gulp参考/</id>
    <published>2016-06-15T22:22:10.000Z</published>
    <updated>2016-06-15T22:54:27.482Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;gulp学习与使用参考网址收录&lt;/p&gt;
&lt;h3 id=&quot;gulp&quot;&gt;&lt;a href=&quot;#gulp&quot; class=&quot;headerlink&quot; title=&quot;gulp&quot;&gt;&lt;/a&gt;gulp&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.gulpjs.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文网&lt;/a&gt;&lt;br&gt;    &lt;a href=&quot;http://gulpjs.com/plugins/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;插件&lt;/a&gt;&lt;br&gt;    &lt;a href=&quot;https://wizardforcel.gitbooks.io/gulp-doc/content/2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitbook&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;gulp_u6838_u5FC3API&quot;&gt;&lt;a href=&quot;#gulp_u6838_u5FC3API&quot; class=&quot;headerlink&quot; title=&quot;gulp核心API&quot;&gt;&lt;/a&gt;gulp核心API&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.ydcss.com/archives/424&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ydcss.com/archives/424&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.hubwiz.com/class/562089cb1bc20c980538e25b#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.hubwiz.com/class/562089cb1bc20c980538e25b#&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5E38_u7528_u63D2_u4EF6_u6536_u96C6&quot;&gt;&lt;a href=&quot;#u5E38_u7528_u63D2_u4EF6_u6536_u96C6&quot; class=&quot;headerlink&quot; title=&quot;常用插件收集&quot;&gt;&lt;/a&gt;常用插件收集&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://markgoodyear.com/2014/01/getting-started-with-gulp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://markgoodyear.com/2014/01/getting-started-with-gulp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;删除文件和文件夹&lt;br&gt;&lt;a href=&quot;https://github.com/sindresorhus/del&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;del&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;合并js文件&lt;br&gt;&lt;a href=&quot;https://github.com/contra/gulp-concat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-concat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;合并css文件&lt;br&gt;&lt;a href=&quot;https://github.com/mariocasciaro/gulp-concat-css&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-concat-css&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;重命名文件&lt;br&gt;&lt;a href=&quot;https://github.com/hparra/gulp-rename&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-rename&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;压缩js&lt;br&gt;    &lt;a href=&quot;https://github.com/terinjokes/gulp-uglify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-uglify&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;压缩css&lt;br&gt;&lt;a href=&quot;https://github.com/ben-eb/gulp-cssnano&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-cssnano&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;压缩页面&lt;br&gt;&lt;a href=&quot;https://github.com/sanfords/gulp-minify-html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-minify-html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;压缩照片&lt;br&gt;   &lt;a href=&quot;https://github.com/sindresorhus/gulp-imagemin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-imagemin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;自动打开浏览器&lt;br&gt;&lt;a href=&quot;https://github.com/stevelacy/gulp-open&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-open&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;依赖自动加载&lt;br&gt;[gulp-load-plugins]&lt;/p&gt;
&lt;p&gt;自动刷新页面&lt;br&gt;    &lt;a href=&quot;https://github.com/vohof/gulp-livereload&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-livereload&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gulp-useref&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;gulp学习与使用参考网址收录&lt;/p&gt;
&lt;h3 id=&quot;gulp&quot;&gt;&lt;a href=&quot;#gulp&quot; cl
    
    </summary>
    
      <category term="东成西就" scheme="http://HeartWalker.cc/categories/%E4%B8%9C%E6%88%90%E8%A5%BF%E5%B0%B1/"/>
    
    
      <category term="gulp" scheme="http://HeartWalker.cc/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>人之力有穷</title>
    <link href="http://HeartWalker.cc/2016/06/10/%E4%BA%BA%E4%B9%8B%E5%8A%9B%E6%9C%89%E7%A9%B7/"/>
    <id>http://HeartWalker.cc/2016/06/10/人之力有穷/</id>
    <published>2016-06-10T03:15:02.000Z</published>
    <updated>2016-06-10T03:35:40.678Z</updated>
    
    <content type="html">&lt;p&gt;想知道的太多, 想学的太多, 想玩的也太多, 人的欲望真是无穷尽, 追寻的过程中有时喜悦, 有时迷茫, 有时恐惧. 想必一个天才也不能实现它的追求, 更不要说我这样一个普通人了. 人有七情六欲, 此乃天使, 也是恶魔; 人还有生老病死, 更乃是未知的命运. &lt;/p&gt;
&lt;p&gt;我想把一切都做好, 我想知道所有知识, 我想要进行一切的娱乐, 但是那是不可能的, 人的力量终究是有穷尽的, 现实与肉体更是逃不开的枷锁, 奈何 奈何 奈何&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;想知道的太多, 想学的太多, 想玩的也太多, 人的欲望真是无穷尽, 追寻的过程中有时喜悦, 有时迷茫, 有时恐惧. 想必一个天才也不能实现它的追求, 更不要说我这样一个普通人了. 人有七情六欲, 此乃天使, 也是恶魔; 人还有生老病死, 更乃是未知的命运. &lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://HeartWalker.cc/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="吐槽" scheme="http://HeartWalker.cc/tags/%E5%90%90%E6%A7%BD/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之indexedDB</title>
    <link href="http://HeartWalker.cc/2016/06/05/HTML5API%E4%B9%8BindexedDB/"/>
    <id>http://HeartWalker.cc/2016/06/05/HTML5API之indexedDB/</id>
    <published>2016-06-05T14:02:08.000Z</published>
    <updated>2016-06-10T03:28:09.408Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;indexedDB是HTML5-WebStorage的重要一环，是一种轻量级NOSQL数据库。&lt;br&gt;IndexedDB是一个相比web sql(sqlite)更加高效，包括索引、事务处理和健壮的查询功能档数据库，它在完全内置于浏览器中的一个沙盒环境中(强制依照（浏览器）同源策略)&lt;/p&gt;
&lt;h3 id=&quot;u57FA_u4E8E_u4E8B_u52A1&quot;&gt;&lt;a href=&quot;#u57FA_u4E8E_u4E8B_u52A1&quot; class=&quot;headerlink&quot; title=&quot;基于事务&quot;&gt;&lt;/a&gt;基于事务&lt;/h3&gt;&lt;p&gt;在indexedDB中，事务会自动提交或回滚。所以无需手动commit或者rollback。&lt;br&gt;事务分为三种:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;IDBTransaction.READ_ONLY              只读
IDBTransaction.READ_WRITE             可读可写
IDBTransaction.VERSION_CHANGE         版本升级
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u6E38_u6807&quot;&gt;&lt;a href=&quot;#u6E38_u6807&quot; class=&quot;headerlink&quot; title=&quot;游标&quot;&gt;&lt;/a&gt;游标&lt;/h3&gt;&lt;p&gt;游标是遍历object store的唯一方法。如果在打开游标的时候不设置，默认采用IDBCursor.NEXT。在调用了cursor.continue之后，cursor会重新调用onsuccess句柄上的方法。&lt;/p&gt;
&lt;h3 id=&quot;u57FA_u4E8E_u8BF7_u6C42&quot;&gt;&lt;a href=&quot;#u57FA_u4E8E_u8BF7_u6C42&quot; class=&quot;headerlink&quot; title=&quot;基于请求&quot;&gt;&lt;/a&gt;基于请求&lt;/h3&gt;&lt;p&gt;对数据库的每次操作，描述为通过一个请求打开数据库,访问一个object store，再继续。IndexedDB API天生是基于请求的,这也是API异步本性指示。对于你在数据库执行的每次操作,你必须首先为这个操作创建一个请求。当请求完成,你可以响应由请求结 果产生的事件和错误。&lt;br&gt;command-&amp;gt;request-&amp;gt;result的方式&lt;/p&gt;
&lt;h3 id=&quot;u6837_u4F8B&quot;&gt;&lt;a href=&quot;#u6837_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;样例&quot;&gt;&lt;/a&gt;样例&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html lang=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;meta charset=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  IndexedDB练习页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 获取indexdb对象,为了兼容性的写法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;、获取对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  window.IDBCursor = window.IDBCursor || window.webkitIDBCursor || window.msIDBCursor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;、定义数据库的基本信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var dbInfo = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dbName: &lt;span class=&quot;string&quot;&gt;&#39;aptdb&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dbVersion: &lt;span class=&quot;number&quot;&gt;2019&lt;/span&gt;, //用小数会四舍五入，版本号只能越来越大&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dbInstance: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;、创建数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var dbContent = window.indexedDB.open(dbInfo.dbName, dbInfo.dbVersion);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 判断数据库版本号是够更新了（创建和修改表结构在这里操作）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 如果数据库名称和版本号相同，那么该方法只执行一次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dbContent.onupgradeneeded = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;、创建数据库store(表)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var _db = e.target.result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var storeNames = _db.objectStoreNames;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!storeNames.contains(&lt;span class=&quot;string&quot;&gt;&quot;cart&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 创建一个表结构出来&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      _db.createObjectStore(&lt;span class=&quot;string&quot;&gt;&quot;cart&quot;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        keyPath: &lt;span class=&quot;string&quot;&gt;&quot;goodsId&quot;&lt;/span&gt;,//相当于关系型数据库中的主键&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        autoIncrement: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 样例数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//        var a=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          goodsId:&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          name:&lt;span class=&quot;string&quot;&gt;&quot;shiguqoing&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          age:&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          number:&lt;span class=&quot;string&quot;&gt;&quot;2354657&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //        var b=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          goodsId:&lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          name:&lt;span class=&quot;string&quot;&gt;&quot;shiguqoing&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          age:&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//          number:&lt;span class=&quot;string&quot;&gt;&quot;2354657&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 数据库创建成功时候的方法（增删改查操作）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dbContent.onsuccess = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;、增删改查操作，开启事物,每次只能做一件事情&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var _db = e.target.result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var trans = _db.transaction([&lt;span class=&quot;string&quot;&gt;&quot;cart&quot;&lt;/span&gt;], &lt;span class=&quot;string&quot;&gt;&quot;readwrite&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var store = trans.objectStore(&lt;span class=&quot;string&quot;&gt;&quot;cart&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 虽然可以在一次成功打开请求的操作中同时操作多次增删改查命令，但是不推荐，以为这样前面的操作就不能被监听到了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 增加数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    var req=store.add(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      goodsId:&lt;span class=&quot;string&quot;&gt;&#39;df6&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      prise:&lt;span class=&quot;number&quot;&gt;12.3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      name:&lt;span class=&quot;string&quot;&gt;&quot;衣服&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      size:&lt;span class=&quot;string&quot;&gt;&quot;M&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      age:&lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 修改数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    var req = store.put(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      goodsId: &lt;span class=&quot;string&quot;&gt;&#39;df8&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      prise: &lt;span class=&quot;number&quot;&gt;12.3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      name: &lt;span class=&quot;string&quot;&gt;&quot;衣服&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      size: &lt;span class=&quot;string&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 删除数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    var req = store.delete(&lt;span class=&quot;string&quot;&gt;&quot;df7&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 查询数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    var req = store.get(&lt;span class=&quot;string&quot;&gt;&quot;df&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 删除所有数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    var req = store.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    req.onsuccess=&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//      console.log(&lt;span class=&quot;string&quot;&gt;&quot;执行了&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    req.onerror=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 查询所有数据（用了游标）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var cursor=store.openCursor();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var data=[];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cursor.onsuccess=&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      var result = e.target.result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result &amp;amp;&amp;amp; result !== null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data.push(result.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 重新执行onsuccess句柄&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result.continue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      console.log(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cursor.onerror=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 数据库创建失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dbContent.onerror = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;string&quot;&gt;&quot;数据库链接失败&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u5C01_u88C5&quot;&gt;&lt;a href=&quot;#u5C01_u88C5&quot; class=&quot;headerlink&quot; title=&quot;封装&quot;&gt;&lt;/a&gt;封装&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var db = (&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(window)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    window.IDBCursor=window.IDBCursor||window.webkitIDBCursor|| window.msIDBCursor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var db=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dbName: &lt;span class=&quot;string&quot;&gt;&#39;aptdb&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dbVersion: &lt;span class=&quot;number&quot;&gt;2046&lt;/span&gt;, //用小数会四舍五入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dbInstance: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      errorHandler: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        console.log(&lt;span class=&quot;string&quot;&gt;&#39;error: &#39;&lt;/span&gt; + error.target.error.message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 打开数据库连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      open: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (func,fail) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var dbContent = window.indexedDB.open(db.dbName, db.dbVersion);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 数据库打开请求的更新回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dbContent.onupgradeneeded = db.upgrade;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 数据库打开请求的失败回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dbContent.onerror = db.errorHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 数据库打开请求的成功回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dbContent.onsuccess = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          db.dbInstance = dbContent.result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          db.dbInstance.onerror = fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          func();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 数据库版本更新操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      upgrade: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var _db = e.target.result,names = _db.objectStoreNames;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 此处可以创建多个表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var name = &lt;span class=&quot;string&quot;&gt;&quot;cart&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!names.contains(name)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          // 创建表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          _db.createObjectStore(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              keyPath: &lt;span class=&quot;string&quot;&gt;&#39;goodsId&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              autoIncrement:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 获取表对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      getObjectStore: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (objectStoreName,mode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var txn, store;mode = mode || &lt;span class=&quot;string&quot;&gt;&#39;readonly&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        txn = db.dbInstance.transaction([objectStoreName], mode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        store = txn.objectStore(objectStoreName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; store;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 增加数据方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      add: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (objectStoreName,data,success,fail) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        db.open(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          var store, req, mode = &lt;span class=&quot;string&quot;&gt;&#39;readwrite&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          store = db.getObjectStore(objectStoreName,mode),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req = store.add(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req.onsuccess = success;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req.onerror=fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,fail);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 修改数据方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      update: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (objectStoreName,data,success,fail) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        db.open(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          var store, req, mode = &lt;span class=&quot;string&quot;&gt;&#39;readwrite&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          store = db.getObjectStore(objectStoreName,mode),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req = store.put(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req.onsuccess = success;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req.onerror=fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,fail);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 获取全部数据方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      getAll: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (objectStoreName,success,fail) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        db.open(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            store = db.getObjectStore(objectStoreName),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cursor = store.openCursor(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            data = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          cursor.onsuccess = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var result = e.target.result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result &amp;amp;&amp;amp; result !== null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              data.push(result.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              result.continue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              success(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          cursor.onerror=fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,fail);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 获取单条数据方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      get: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (id,objectStoreName,success,fail) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        db.open(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            store = db.getObjectStore(objectStoreName),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req = store.get(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req.onsuccess = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            success(e.target.result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req.onerror=fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // delete是保留字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 删除数据方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;delete&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (id,objectStoreName,success,fail) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        db.open(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mode = &lt;span class=&quot;string&quot;&gt;&#39;readwrite&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            store, req;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          store = db.getObjectStore(objectStoreName,mode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req = store.delete(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req.onsuccess = success;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req.onerror=fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 删除表数据方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      deleteAll: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (objectStoreName,success,fail) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        db.open(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          var mode, store, req;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          mode = &lt;span class=&quot;string&quot;&gt;&#39;readwrite&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          store = db.getObjectStore(objectStoreName,mode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req = store.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req.onsuccess = success;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          req.onerror=fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; db;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(window);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;indexedDB是HTML5-WebStorage的重要一环，是一种轻量级NOSQL数据库。&lt;br&gt;I
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>即时通信之Comet简解</title>
    <link href="http://HeartWalker.cc/2016/05/25/%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E4%B9%8BComet%E7%AE%80%E8%A7%A3/"/>
    <id>http://HeartWalker.cc/2016/05/25/即时通信之Comet简解/</id>
    <published>2016-05-25T02:52:29.000Z</published>
    <updated>2016-05-25T05:55:41.252Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u77ED_u8F6E_u8BE2&quot;&gt;&lt;a href=&quot;#u77ED_u8F6E_u8BE2&quot; class=&quot;headerlink&quot; title=&quot;短轮询&quot;&gt;&lt;/a&gt;短轮询&lt;/h3&gt;&lt;p&gt;使用定时器与AJAX, 定时发送请求&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Interval(xhrRequest, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;xhrRequest&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var xhr = new XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xhr.open(&lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;,url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xhr.send(null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xhr.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(xhr.readyState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //  TODO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u957F_u8F6E_u8BE2&quot;&gt;&lt;a href=&quot;#u957F_u8F6E_u8BE2&quot; class=&quot;headerlink&quot; title=&quot;长轮询&quot;&gt;&lt;/a&gt;长轮询&lt;/h3&gt;&lt;p&gt;使用AJAX, 在响应完成时再次发送请求&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; longPull(url, callback)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var xhr = new XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.open(&lt;span class=&quot;string&quot;&gt;&#39;post&#39;&lt;/span&gt;,url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&#39;Content-type&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;application/x-www-form-unlencoded&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.send(null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(xhr.readeState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            callback(xhr.responseText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //发送另一个请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            xhr.open(&lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;,url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            xhr.send(null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;XHR_u6D41&quot;&gt;&lt;a href=&quot;#XHR_u6D41&quot; class=&quot;headerlink&quot; title=&quot;XHR流&quot;&gt;&lt;/a&gt;XHR流&lt;/h3&gt;&lt;p&gt;使用AJAX并在服务器端设置打印打输出缓存然后刷新,使readyState的状态维持为3&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;服务器端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //输出一些数据,然后立即刷新缓存输出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Number is &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flush();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sleep(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;客户端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; xhrStreaming(url, callback)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var xhr = new XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.open(&lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var lastSize = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(xhr.readyState == &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reuslt = xhr.responseText.subString(lastSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastSize = xhr.responseText.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            callback(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(xhr.readyState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            xhrStreaming(url, callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.send(null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;SSE&quot;&gt;&lt;a href=&quot;#SSE&quot; class=&quot;headerlink&quot; title=&quot;SSE&quot;&gt;&lt;/a&gt;SSE&lt;/h3&gt;&lt;h3 id=&quot;Web_Sockets&quot;&gt;&lt;a href=&quot;#Web_Sockets&quot; class=&quot;headerlink&quot; title=&quot;Web Sockets&quot;&gt;&lt;/a&gt;Web Sockets&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u77ED_u8F6E_u8BE2&quot;&gt;&lt;a href=&quot;#u77ED_u8F6E_u8BE2&quot; class=&quot;headerlink&quot; title=&quot;短轮询&quot;&gt;&lt;/a&gt;短轮询&lt;/h3&gt;&lt;p&gt;使用定时器与AJAX, 定时发送请求&lt;br&gt;&lt;figure class=&quot;h
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="通信" scheme="http://HeartWalker.cc/tags/%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之应用缓存</title>
    <link href="http://HeartWalker.cc/2016/05/21/HTML5API%E4%B9%8B%E5%BA%94%E7%94%A8%E7%BC%93%E5%AD%98/"/>
    <id>http://HeartWalker.cc/2016/05/21/HTML5API之应用缓存/</id>
    <published>2016-05-21T05:31:51.000Z</published>
    <updated>2016-05-21T15:16:34.297Z</updated>
    
    <content type="html">&lt;p&gt;本来想写一写, 去 MDN 上一看突然发现&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Deprecated
This feature has been removed from the Web standards. 
Though some browsers may still support it, it is in the process of being dropped. 
Do not use it in old or new projects. 
Pages or Web apps using it may break at any time.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其已被废弃并从标准中移除, 便不再整理&lt;br&gt;(更多信息来自MDN)[&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache&lt;/a&gt;]&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本来想写一写, 去 MDN 上一看突然发现&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Deprecated
This feature has been removed from the Web standards. 
Though some browsers may still sup
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之拖放</title>
    <link href="http://HeartWalker.cc/2016/05/21/HTML5API%E4%B9%8B%E6%8B%96%E6%94%BE/"/>
    <id>http://HeartWalker.cc/2016/05/21/HTML5API之拖放/</id>
    <published>2016-05-21T05:31:40.000Z</published>
    <updated>2016-05-21T17:14:21.623Z</updated>
    
    <content type="html">&lt;p&gt;在HTML5的规范中，我们可以通过为元素标签增加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;draggable=&amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;属性来设置此元素是否可以进行拖拽操作，其中图片、链接默认是开启的。&lt;/p&gt;
&lt;h3 id=&quot;u4E8B_u4EF6&quot;&gt;&lt;a href=&quot;#u4E8B_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;事件&quot;&gt;&lt;/a&gt;事件&lt;/h3&gt;&lt;p&gt;拖拽元素&lt;br&gt;页面中设置了draggable=”true”属性的元素  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;drag      应用于拖拽元素，整个拖拽过程会不断调用
dragstart 应用于拖拽元素，当拖拽开始时调用
dragleave 应用于拖拽元素，当鼠标离开拖拽元素时调用
dragend   应用于拖拽元素，当拖拽结束时调用
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;目标元素&lt;br&gt;页面中任何一个元素都可以成为目标元素   &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dragenter 应用于目标元素，当拖拽元素进入时调用
dragover  应用于目标元素，当停留在目标元素上时会不断调用
drop      应用于目标元素，当在目标元素上松开鼠标时调用
dragleave 应用于目标元素，当鼠标离开目标元素时调用
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;事件对象的方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;event.dataTransfer.setData(k, v); 设置被拖数据的数据类型和值
event.dataTransfer.getData(k); 获得被拖的数据
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;默认地，无法将数据/元素放置到其他元素中。如果需要设置允许放置，我们必须阻止对元素的默认处理方式。&lt;br&gt;这要通过调用 ondragover 事件的 event.preventDefault() 方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;event.preventDefault()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(更多信息来自w3school)[&lt;a href=&quot;http://www.w3school.com.cn/html5/html_5_draganddrop.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3school.com.cn/html5/html_5_draganddrop.asp&lt;/a&gt;]&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在HTML5的规范中，我们可以通过为元素标签增加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;draggable=&amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;属性来设置此元素是否可以进行拖拽操作，其中图片、链接默认是开启的。&lt;/p&gt;
&lt;h3 id=&quot;u4E8B_u4
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之历史管理</title>
    <link href="http://HeartWalker.cc/2016/05/21/HTML5API%E4%B9%8B%E5%8E%86%E5%8F%B2%E7%AE%A1%E7%90%86/"/>
    <id>http://HeartWalker.cc/2016/05/21/HTML5API之历史管理/</id>
    <published>2016-05-21T05:31:29.000Z</published>
    <updated>2016-05-21T07:41:48.503Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u65E7_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u65E7_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;旧方法&quot;&gt;&lt;/a&gt;旧方法&lt;/h3&gt;&lt;p&gt;旧版本中我们用 BOM 的 history 对象来管理历史记录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;history.back(); 回退
history.forward(); 前进
history.go(n);  前进/后退n步，正值前进，负值后退
history.length; 历史记录条数(同一个站点下的历史记录的长度)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u65B0_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u65B0_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;新方法&quot;&gt;&lt;/a&gt;新方法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;pushState(data, title, url) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追加一条历史记录:&lt;br&gt;在当前页面之前插入一个一模一样的页面并将当前页面的 url 更改为方法中设置的 url&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;data 用于存储自定义数据，通常设为null
title 网页标题，基本上没有被浏览器支持，一般设为空
url 以当前域为基础增加一条历史记录，不可跨域设置
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    // 1、pushState可以往历史记录添加一条记录
    var btn = document.getElementById(&amp;apos;btn&amp;apos;);       
    btn.onclick = function () {
        // history对象的新方法pushState
        // 可以追加一条历史记录
        // 追加完成后，当前页面并未刷新
        history.pushState(null, &amp;apos;title&amp;apos;, &amp;apos;/text.html&amp;apos;);
        // 1、代表是传递的数据，一般可能传null
        // 2、代表网页标题，但是浏览器不支持
        // 3、追加的历史记录
    }       
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;replaceState(data, title, url) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与pushState()基本相同，不同之处在于replaceState()，只是替换当前url，不会增加/减少历史记录。&lt;/p&gt;
&lt;h3 id=&quot;u4E8B_u4EF6_u76D1_u542C&quot;&gt;&lt;a href=&quot;#u4E8B_u4EF6_u76D1_u542C&quot; class=&quot;headerlink&quot; title=&quot;事件监听&quot;&gt;&lt;/a&gt;事件监听&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;onpopstate;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当前进或后退时则触发，通过事件对象ev.state可以读取到存储的数据，监听是要给window。&lt;br&gt;例:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    var btn = document.getElementById(&amp;apos;btn&amp;apos;);
    btn.onclick = function () {
        // 追加历史记录
        history.pushState({key: 123}, &amp;apos;title&amp;apos;, &amp;apos;/text.html&amp;apos;);
    }
    // 监听历史的变化
    window.onpopstate = function (ev) {
        console.log(ev.state);
        console.log(ev);
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u65E7_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u65E7_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;旧方法&quot;&gt;&lt;/a&gt;旧方法&lt;/h3&gt;&lt;p&gt;旧版本中我们用 BOM 的 history 对象来管理历史记录&lt;/p&gt;
&lt;p
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之Web存储</title>
    <link href="http://HeartWalker.cc/2016/05/21/HTML5API%E4%B9%8BWeb%E5%AD%98%E5%82%A8/"/>
    <id>http://HeartWalker.cc/2016/05/21/HTML5API之Web存储/</id>
    <published>2016-05-20T17:08:06.000Z</published>
    <updated>2016-05-21T05:26:05.007Z</updated>
    
    <content type="html">&lt;p&gt;传统方式我们以document.cookie来进行存储的，但是由于其存储大小只有4k左右，并且解析也相当的复杂，给开发带来诸多不便，HTML5 提供了两种在客户端存储数据的新方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;localStorage;
sessionStorage;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u7279_u6027&quot;&gt;&lt;a href=&quot;#u7279_u6027&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;特性&lt;/h3&gt;&lt;p&gt;1、设置、读取方便&lt;br&gt;2、容量较大，sessionStorage约5M、localStorage约20M&lt;br&gt;3、只能存储字符串，可以将对象JSON.stringify() 编码后存储&lt;/p&gt;
&lt;h3 id=&quot;sessionStorage&quot;&gt;&lt;a href=&quot;#sessionStorage&quot; class=&quot;headerlink&quot; title=&quot;sessionStorage&quot;&gt;&lt;/a&gt;sessionStorage&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;生命周期为关闭浏览器窗口&lt;/li&gt;
&lt;li&gt;在同一个窗口下数据可以共享&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;localStorage&quot;&gt;&lt;a href=&quot;#localStorage&quot; class=&quot;headerlink&quot; title=&quot;localStorage&quot;&gt;&lt;/a&gt;localStorage&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;永久生效，除非手动删除&lt;/li&gt;
&lt;li&gt;可以多窗口共享 但不能跨域&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;setItem(key, value) 设置存储内容
getItem(key) 读取存储内容
removeItem(key) 删除键值为key的存储内容
clear() 清空所有存储内容
key(n) 以索引值来获取存储内容
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多信息来自MDN&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.w3school.com.cn/html5/html_5_webstorage.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多信息来自w3school&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;传统方式我们以document.cookie来进行存储的，但是由于其存储大小只有4k左右，并且解析也相当的复杂，给开发带来诸多不便，HTML5 提供了两种在客户端存储数据的新方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;localStorage;
sessionStorage;
&lt;
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之文件读取</title>
    <link href="http://HeartWalker.cc/2016/05/20/HTML5API%E4%B9%8B%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    <id>http://HeartWalker.cc/2016/05/20/HTML5API之文件读取/</id>
    <published>2016-05-20T15:30:51.000Z</published>
    <updated>2016-05-20T16:25:53.411Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;通过FileReader对象我们可以读取本地存储的文件，可以使用 File 对象来指定所要读取的文件或数据。其中File对象可以是来自用户在一个 &amp;lt; input &amp;gt; 元素上选择文件后返回的FileList 对象，也可以来自 由拖放操作生成的  DataTransfer&lt;/p&gt;
&lt;h3 id=&quot;u5C5E_u6027&quot;&gt;&lt;a href=&quot;#u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;属性&quot;&gt;&lt;/a&gt;属性&lt;/h3&gt;&lt;p&gt;FileList对象&lt;br&gt;由于HTML5中我们可以通过为表单元素添加multiple属性，因此我们通过 &amp;lt; input &amp;gt;上传文件后得到的是一个FileList对象（伪数组形式）。&lt;/p&gt;
&lt;p&gt;FileReader对象&lt;br&gt;HTML5新增内建对象，可以读取本地文件内容。&lt;br&gt;实例化一个对象&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reader = new FileReader;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;实例方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;readAsDataURL(); 以DataURL形式读取文件
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;事件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;onabort
当读取操作被中止时调用.
onerror
当读取操作发生错误时调用.
onload
当读取操作成功完成时调用.
onloadend
当读取操作完成时调用,不管是成功还是失败.该处理程序在onload或者onerror之后调用.
onloadstart
当读取操作将要开始之前调用.
onprogress
在读取数据过程中周期性调用.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;属性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;result 文件读取结果
error  在读取文件时发生的错误
readyState  表明FileReader对象的当前状态
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u6D4B_u8BD5_u4EE3_u7801&quot;&gt;&lt;a href=&quot;#u6D4B_u8BD5_u4EE3_u7801&quot; class=&quot;headerlink&quot; title=&quot;测试代码&quot;&gt;&lt;/a&gt;测试代码&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html lang=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;meta charset=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;文件读取&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;file&quot;&lt;/span&gt; class=&lt;span class=&quot;string&quot;&gt;&quot;file&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;img src=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; alt=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; id=&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var file = document.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.file&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        file.onchange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 通过this.files 可以获取File对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 通过this.files[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] 可以获第一上传的文件，因为h5支持多文件上传&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 实例化一个文件读取器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var reader = new FileReader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 读取刚刚上传上文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reader.readAsDataURL(this.files[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 读取完成时&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reader.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                console.log(reader.result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // 将读取结果放到图片标签里&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                document.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;).src = reader.result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader#toc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多信息来自MDN&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;通过FileReader对象我们可以读取本地存储的文件，可以使用 File 对象来指定所要读取的文件或数
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之地理定位</title>
    <link href="http://HeartWalker.cc/2016/05/20/HTML5API%E4%B9%8B%E5%9C%B0%E7%90%86%E5%AE%9A%E4%BD%8D/"/>
    <id>http://HeartWalker.cc/2016/05/20/HTML5API之地理定位/</id>
    <published>2016-05-20T14:10:58.000Z</published>
    <updated>2016-05-20T15:29:12.648Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u57FA_u672C_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;基本方法&quot;&gt;&lt;/a&gt;基本方法&lt;/h3&gt;&lt;p&gt;获取当前地理信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;navigator.geolocation.getCurrentPosition(successCallback, errorCallback, options);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重复获取当前地理信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;navigator.geolocation.watchPosition(successCallback, errorCallback, options); 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;停止 watchPosition() 方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;navigator.geolocation.clearWatch();
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u53C2_u6570_u8BE6_u89E3&quot;&gt;&lt;a href=&quot;#u53C2_u6570_u8BE6_u89E3&quot; class=&quot;headerlink&quot; title=&quot;参数详解&quot;&gt;&lt;/a&gt;参数详解&lt;/h3&gt;&lt;p&gt;当成功获取地理信息后，会调用succssCallback，并返回一个包含位置信息的对象 position, position有个coords属性, coords包含的部分坐标属性如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;position.coords.latitude  //纬度
position.coords.longitude //经度
position.coords.accuracy  //精度
position.coords.altitude  //海拔高度
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当获取地理信息失败后，会调用errorCallback，并返回错误信息error&lt;/p&gt;
&lt;p&gt;可选参数 options 对象可以调整位置信息数据收集方式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a) enableHighAccuracy 高精度模式
b) timeout 超时设置，单位为ms
c) maximumAge表示浏览器重新获取位置信息的时间间隔，单位为ms
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u6CE8&quot;&gt;&lt;a href=&quot;#u6CE8&quot; class=&quot;headerlink&quot; title=&quot;注&quot;&gt;&lt;/a&gt;注&lt;/h3&gt;&lt;p&gt;我们可以在手机下使用该属性, 但在PC端即使翻墙仍然可能无法使用该属性&lt;br&gt;&lt;a href=&quot;http://www.w3school.com.cn/html5/html_5_geolocation.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多信息来自w3school&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Geolocation/Using_geolocation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多信息来自MDN&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u57FA_u672C_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;基本方法&quot;&gt;&lt;/a&gt;基本方法&lt;/h3&gt;&lt;p&gt;获取当前地理信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之网络状态</title>
    <link href="http://HeartWalker.cc/2016/05/20/HTML5API%E4%B9%8B%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81/"/>
    <id>http://HeartWalker.cc/2016/05/20/HTML5API之网络状态/</id>
    <published>2016-05-20T13:41:01.000Z</published>
    <updated>2016-05-20T14:20:19.980Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u57FA_u672C_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;基本方法&quot;&gt;&lt;/a&gt;基本方法&lt;/h3&gt;&lt;p&gt;我们可以通过&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;navigator.onLine;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来检测，用户当前的网络状况，返回一个布尔值, 局域网算是联通状态&lt;/p&gt;
&lt;h3 id=&quot;u7F51_u7EDC_u76D1_u542C_u4E8B_u4EF6&quot;&gt;&lt;a href=&quot;#u7F51_u7EDC_u76D1_u542C_u4E8B_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;网络监听事件&quot;&gt;&lt;/a&gt;网络监听事件&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;online //当网络连通时触发 
offline //当网络断开时触发
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这两个事件都需要绑定给 window 并且需要使用 DOM2级事件&lt;br&gt;如:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;window.addEventListener(&amp;quot;offline&amp;quot;, function(e) {
     console.log(&amp;quot;offline&amp;quot;);
 });
window.addEventListener(&amp;quot;online&amp;quot;, function(e) {
     console.log(&amp;quot;online&amp;quot;);
 });
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u57FA_u672C_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;基本方法&quot;&gt;&lt;/a&gt;基本方法&lt;/h3&gt;&lt;p&gt;我们可以通过&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;na
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>HTML5API之全屏</title>
    <link href="http://HeartWalker.cc/2016/05/19/HTML5API%E4%B9%8B%E5%85%A8%E5%B1%8F/"/>
    <id>http://HeartWalker.cc/2016/05/19/HTML5API之全屏/</id>
    <published>2016-05-19T14:12:55.000Z</published>
    <updated>2016-05-20T13:45:01.191Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u57FA_u672C_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;基本方法&quot;&gt;&lt;/a&gt;基本方法&lt;/h3&gt;&lt;p&gt;HTML5规范允许用户自定义网页上任一元素全屏显示&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;requestFullScreen(); //开启全屏显示
cancleFullScreen();  //关闭全屏显示
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是由于浏览器的实现与兼容性的问题, 目前需要这样来使用它们&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;element.webkitRequestFullScreen()
element.mozRequestFullScreen()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上述代码会将 element 元素全屏, 即非element元素会被隐藏&lt;br&gt;规范允许所有元素可以取消全屏，但实际测试结果 关闭全屏 只能添加到 document 元素上, 使用其他元素会报错&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;document.webkitCancelFullScreen()
document.mozCancelFullScreen()
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u5168_u5C4F_u68C0_u67E5&quot;&gt;&lt;a href=&quot;#u5168_u5C4F_u68C0_u67E5&quot; class=&quot;headerlink&quot; title=&quot;全屏检查&quot;&gt;&lt;/a&gt;全屏检查&lt;/h3&gt;&lt;p&gt;可以通过下面代码检测当前是否处于全屏状态&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;document.fullScreen;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不同浏览器仍然需要添加前缀&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;document.webkitIsFullScreen;
document.mozFullScreen;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u5168_u5C4F_u4F2A_u7C7B&quot;&gt;&lt;a href=&quot;#u5168_u5C4F_u4F2A_u7C7B&quot; class=&quot;headerlink&quot; title=&quot;全屏伪类&quot;&gt;&lt;/a&gt;全屏伪类&lt;/h3&gt;&lt;p&gt;还有一个全屏伪类, 可以设置全屏状态下的样式&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:full-screen 
:-webkit-full-screen
:-moz-full-screen 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u6CE8&quot;&gt;&lt;a href=&quot;#u6CE8&quot; class=&quot;headerlink&quot; title=&quot;注&quot;&gt;&lt;/a&gt;注&lt;/h3&gt;&lt;p&gt;目前标准写法仍未被实现,使用标准方法会报错(至少在pc端是这样)&lt;/p&gt;
&lt;h3 id=&quot;chrome_u4E0B_u6D4B_u8BD5_u4EE3_u7801_3A&quot;&gt;&lt;a href=&quot;#chrome_u4E0B_u6D4B_u8BD5_u4EE3_u7801_3A&quot; class=&quot;headerlink&quot; title=&quot;chrome下测试代码:&quot;&gt;&lt;/a&gt;chrome下测试代码:&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html lang=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;meta charset=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;全屏&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .box &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            background: blue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :-webkit-full-screen .box &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            background-color: red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .cl&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            background-color: gold;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;cl&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; class=&lt;span class=&quot;string&quot;&gt;&#39;open&#39;&lt;/span&gt; value=&lt;span class=&quot;string&quot;&gt;&quot;全屏&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; class=&lt;span class=&quot;string&quot;&gt;&#39;cancle&#39;&lt;/span&gt; value=&lt;span class=&quot;string&quot;&gt;&quot;关闭全屏&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var open = document.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.open&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var cancle = document.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.cancle&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var box = document.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.box&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        open.onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.documentElement.webkitRequestFullScreen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // box.webkitRequestFullScreen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            alert(document.webkitIsFullScreen);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cancle.onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            alert(document.webkitIsFullScreen);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.webkitCancelFullScreen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // document.documentElement.webkitCancelFullScreen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u57FA_u672C_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;基本方法&quot;&gt;&lt;/a&gt;基本方法&lt;/h3&gt;&lt;p&gt;HTML5规范允许用户自定义网页上任一元素全屏显
    
    </summary>
    
      <category term="web" scheme="http://HeartWalker.cc/categories/web/"/>
    
    
      <category term="H5" scheme="http://HeartWalker.cc/tags/H5/"/>
    
  </entry>
  
  <entry>
    <title>css与js如何调错</title>
    <link href="http://HeartWalker.cc/2016/05/15/css%E4%B8%8Ejs%E5%A6%82%E4%BD%95%E8%B0%83%E9%94%99/"/>
    <id>http://HeartWalker.cc/2016/05/15/css与js如何调错/</id>
    <published>2016-05-15T05:09:21.000Z</published>
    <updated>2016-05-15T05:51:02.087Z</updated>
    
    <content type="html">&lt;p&gt;css 与 js 效果没有实现怎么办，出错了怎么办，可以按如下思路来解决&lt;/p&gt;
&lt;h3 id=&quot;F12_u5927_u6CD5_u597D&quot;&gt;&lt;a href=&quot;#F12_u5927_u6CD5_u597D&quot; class=&quot;headerlink&quot; title=&quot;F12大法好&quot;&gt;&lt;/a&gt;F12大法好&lt;/h3&gt;&lt;p&gt;打开 Firefox 或 Chrome 浏览器，按下F12，这是解决问题的基础&lt;/p&gt;
&lt;h3 id=&quot;u901A_u7528_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u901A_u7528_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;通用方法&quot;&gt;&lt;/a&gt;通用方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;看是否有红字报错， 一般如果看到报错信息的话问题就解决了一大半，可以根据提示快速定位问题所在，如果 不知道报错信息是什么意思可以去网上搜索&lt;/li&gt;
&lt;li&gt;确保页面上只有一个错误，如果有多个最好对代码进行逐步注释，直到最后一个错误&lt;/li&gt;
&lt;li&gt;根据现象分析问题，是哪错了，那些效果没有实现，分析出可能是什么地方出现了问题 &lt;/li&gt;
&lt;li&gt;是不是浏览器兼容性问题&lt;/li&gt;
&lt;li&gt;是不是有缓存的影响，强制刷新浏览器或清除缓存&lt;/li&gt;
&lt;li&gt;将错误的关键点提取出来，到网上搜索，最好使用 google&lt;/li&gt;
&lt;li&gt;请教朋友或大神，请注意提问的艺术，在大部分情况下请在最后才这么做&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;css_u7279_u6709&quot;&gt;&lt;a href=&quot;#css_u7279_u6709&quot; class=&quot;headerlink&quot; title=&quot;css特有&quot;&gt;&lt;/a&gt;css特有&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用调试工具的审查元素，查看页面结构与布局&lt;/li&gt;
&lt;li&gt;看样式是不是没用命中&lt;/li&gt;
&lt;li&gt;看样式是不是被覆盖了&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;js_u7279_u6709&quot;&gt;&lt;a href=&quot;#js_u7279_u6709&quot; class=&quot;headerlink&quot; title=&quot;js特有&quot;&gt;&lt;/a&gt;js特有&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;灵活的使用 console.log()，特别是在对程序比较了解的情况下，基本上几次就能定位问题所在&lt;/li&gt;
&lt;li&gt;使用调试工具打断点和监视变量，如果对程序不太了解或不能定位出问题的所在可以采用这种方法，但可能会耗费较久的时间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：深入理解 css 与 js 的原理是能快速解决问题的法宝&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;css 与 js 效果没有实现怎么办，出错了怎么办，可以按如下思路来解决&lt;/p&gt;
&lt;h3 id=&quot;F12_u5927_u6CD5_u597D&quot;&gt;&lt;a href=&quot;#F12_u5927_u6CD5_u597D&quot; class=&quot;headerlink&quot; title=&quot;F12大法好
    
    </summary>
    
      <category term="东成西就" scheme="http://HeartWalker.cc/categories/%E4%B8%9C%E6%88%90%E8%A5%BF%E5%B0%B1/"/>
    
    
      <category term="调错" scheme="http://HeartWalker.cc/tags/%E8%B0%83%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>jquery中的this</title>
    <link href="http://HeartWalker.cc/2016/05/13/jquery%E4%B8%AD%E7%9A%84this/"/>
    <id>http://HeartWalker.cc/2016/05/13/jquery中的this/</id>
    <published>2016-05-13T01:29:34.000Z</published>
    <updated>2016-05-13T13:21:11.586Z</updated>
    
    <content type="html">&lt;p&gt;前天有人有问这样一个问题: 我一个网页里面有好多个前面一张图的结构，然后点击第n个加号会显示第n个子内容，点击第n个减号会隐藏第n个子内容，但是我现在总是不对，我把n弹出来，只要点加号就是0，点减号就是1，这是什么原因呀？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/jq中的this1.png&quot; alt=&quot;&quot;&gt;&lt;img src=&quot;/images/jq中的this2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;很明显问题出在这一句代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var n = $(this).index();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;只需要将代码改为:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var n = $(.add).index(this);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之所以会犯错主要有两方面原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不了解jquery中的this&lt;br&gt;  jquery中有一个很重要的概念叫隐式迭代, 在jquery内部会对调用事件的jquery DOM数组使用 each 方法, 事件函数中的this并不是调用事件的数组而是当前的原生DOM对象&lt;/li&gt;
&lt;li&gt;不了解jquery中的index方法&lt;br&gt;  调用index()会搜索匹配的元素，并返回相应元素的索引值，从0开始计数。&lt;br&gt;  如果不给 index() 方法传递参数，那么返回值就是这个jQuery对象集合中第一个元素相对于其同辈元素的位置。&lt;br&gt;如果参数是一组DOM元素或者jQuery对象，那么返回值就是传递的元素相对于原先集合的位置。&lt;br&gt;如果参数是一个选择器，那么返回值就是原先元素相对于选择器匹配元素中的位置。如果找不到匹配的元素，则返回-1。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$(this).index();相当于查找当前对象在同辈元素中的位置, 当然不能满足需求
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;前天有人有问这样一个问题: 我一个网页里面有好多个前面一张图的结构，然后点击第n个加号会显示第n个子内容，点击第n个减号会隐藏第n个子内容，但是我现在总是不对，我把n弹出来，只要点加号就是0，点减号就是1，这是什么原因呀？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/
    
    </summary>
    
      <category term="东成西就" scheme="http://HeartWalker.cc/categories/%E4%B8%9C%E6%88%90%E8%A5%BF%E5%B0%B1/"/>
    
    
      <category term="jquery" scheme="http://HeartWalker.cc/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>new与return和函数</title>
    <link href="http://HeartWalker.cc/2016/05/09/new%E4%B8%8Ereturn%E5%92%8C%E5%87%BD%E6%95%B0/"/>
    <id>http://HeartWalker.cc/2016/05/09/new与return和函数/</id>
    <published>2016-05-09T06:29:09.000Z</published>
    <updated>2016-05-10T04:52:42.825Z</updated>
    
    <content type="html">&lt;p&gt;主要介绍函数中有无 return 与是否用 new 调用时的异同&lt;/p&gt;
&lt;h3 id=&quot;u6709new_u65E0return_28_u6784_u9020_u51FD_u6570_29&quot;&gt;&lt;a href=&quot;#u6709new_u65E0return_28_u6784_u9020_u51FD_u6570_29&quot; class=&quot;headerlink&quot; title=&quot;有new无return(构造函数)&quot;&gt;&lt;/a&gt;有new无return(构造函数)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.name = &lt;span class=&quot;string&quot;&gt;&#39;heart&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var person = new Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(person.name);   //heart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6709new_u6709return_28_u5BC4_u751F_u6A21_u5F0F_29&quot;&gt;&lt;a href=&quot;#u6709new_u6709return_28_u5BC4_u751F_u6A21_u5F0F_29&quot; class=&quot;headerlink&quot; title=&quot;有new有return(寄生模式)&quot;&gt;&lt;/a&gt;有new有return(寄生模式)&lt;/h3&gt;&lt;p&gt;return 简单数据类型 和构造函数一样&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.name = &lt;span class=&quot;string&quot;&gt;&#39;heart&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name = &lt;span class=&quot;string&quot;&gt;&#39;walker&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var person = new Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(person.name);   //heart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;return 返回复杂数据类型(寄生模式)&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.name = &lt;span class=&quot;string&quot;&gt;&#39;heart&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name: &lt;span class=&quot;string&quot;&gt;&#39;walker&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var person = new Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(person.name);   //waker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此时的 person 是 return出来的对象&lt;/p&gt;
&lt;h3 id=&quot;u65E0new_u65E0return&quot;&gt;&lt;a href=&quot;#u65E0new_u65E0return&quot; class=&quot;headerlink&quot; title=&quot;无new无return&quot;&gt;&lt;/a&gt;无new无return&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.name = &lt;span class=&quot;string&quot;&gt;&#39;heart&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var person = Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(person.name);   //报错&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好吧, 其实这里 Person 不应该大写, 这就是给 变量 person 赋函数 Person 的调用返回值&lt;/p&gt;
&lt;h3 id=&quot;u65E0new_u6709return&quot;&gt;&lt;a href=&quot;#u65E0new_u6709return&quot; class=&quot;headerlink&quot; title=&quot;无new有return&quot;&gt;&lt;/a&gt;无new有return&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.name = &lt;span class=&quot;string&quot;&gt;&#39;heart&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name: &lt;span class=&quot;string&quot;&gt;&#39;walker&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var person = Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(person.name);   //walker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; 注: &lt;/strong&gt; 在这种情况看起来与寄生模式很相似, 但它会在全局对象中创建了一个新的名为 name 的属性, 可以通过 window.name 或 name直接访问, 当然在严格模式下由于 this 不会指向全局对象, 这段代码会报错&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍函数中有无 return 与是否用 new 调用时的异同&lt;/p&gt;
&lt;h3 id=&quot;u6709new_u65E0return_28_u6784_u9020_u51FD_u6570_29&quot;&gt;&lt;a href=&quot;#u6709new_u65E0return_28_u6784_
    
    </summary>
    
      <category term="js" scheme="http://HeartWalker.cc/categories/js/"/>
    
    
      <category term="函数" scheme="http://HeartWalker.cc/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>祸不单行</title>
    <link href="http://HeartWalker.cc/2016/05/05/%E7%A5%B8%E4%B8%8D%E5%8D%95%E8%A1%8C/"/>
    <id>http://HeartWalker.cc/2016/05/05/祸不单行/</id>
    <published>2016-05-05T00:57:39.000Z</published>
    <updated>2016-05-05T11:14:06.095Z</updated>
    
    <content type="html">&lt;p&gt;连续三天半夜被牙疼疼醒, 吃药也不管用, 终于忍不住去了医院, 最后做了根管治疗杀了神经, 不知道这颗牙齿还能撑多久. 医生说你今天晚上可以睡个安稳觉了, 谁知道当天下午就开始发起了高烧. &lt;/p&gt;
&lt;p&gt;说实话医院补牙特别是做牙套真是暴利, 正值魏则西事件持续发酵, 真是深刻的感受到在你国不能有病, 不能没钱.&lt;/p&gt;
&lt;p&gt;程序员一定要注意自己的身体啊, 最好还是不要熬夜了.&lt;/p&gt;
&lt;p&gt;感谢和我住在一起的小伙伴, 要是我自己说不定哪天就烧晕过去了也无人知道, 可怜的单身.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;连续三天半夜被牙疼疼醒, 吃药也不管用, 终于忍不住去了医院, 最后做了根管治疗杀了神经, 不知道这颗牙齿还能撑多久. 医生说你今天晚上可以睡个安稳觉了, 谁知道当天下午就开始发起了高烧. &lt;/p&gt;
&lt;p&gt;说实话医院补牙特别是做牙套真是暴利, 正值魏则西事件持续发酵, 真是
    
    </summary>
    
      <category term="生活" scheme="http://HeartWalker.cc/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="吐槽" scheme="http://HeartWalker.cc/tags/%E5%90%90%E6%A7%BD/"/>
    
  </entry>
  
  <entry>
    <title>JS严格模式</title>
    <link href="http://HeartWalker.cc/2016/05/04/JS%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/"/>
    <id>http://HeartWalker.cc/2016/05/04/JS严格模式/</id>
    <published>2016-05-04T04:14:28.000Z</published>
    <updated>2016-05-05T13:19:07.614Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u5F15_u7528&quot;&gt;&lt;a href=&quot;#u5F15_u7528&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h3&gt;&lt;p&gt;本页内容引用自&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;JavaScript高级程序设计（第3版）------------p717-p722
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结合 Node.js 与当前 ECMAScript 有少部分修改与注释    &lt;/p&gt;
&lt;h3 id=&quot;u8D77_u6E90&quot;&gt;&lt;a href=&quot;#u8D77_u6E90&quot; class=&quot;headerlink&quot; title=&quot;起源&quot;&gt;&lt;/a&gt;起源&lt;/h3&gt;&lt;p&gt;ECMAScript 5最早引入了“严格模式”（strict mode）的概念。通过严格模式，可以在函数内部 选择进行较为严格的全局或局部的错误条件检测。使用严格模式的好处是可以提早知道代码中 存在的错误，及时捕获一些可能导致编程错误的 ECMAScript行为。 &lt;/p&gt;
&lt;h3 id=&quot;u5728Node-js_u4E2D_u5F00_u542F_u4E25_u683C_u6A21_u5F0F&quot;&gt;&lt;a href=&quot;#u5728Node-js_u4E2D_u5F00_u542F_u4E25_u683C_u6A21_u5F0F&quot; class=&quot;headerlink&quot; title=&quot;在Node.js中开启严格模式&quot;&gt;&lt;/a&gt;在Node.js中开启严格模式&lt;/h3&gt;&lt;p&gt;由于浏览器兼容的问题, 严格模式在 WEB 开发中并没有被特别多的使用, 如今ECMAScript 6已经制定, ECMAScript 7 也在制定中, Node.js 对 ECMAScript 的规范支持的比较好, 并且在 Node.js 中 ECMAScript 6 的某些语法只有在严格模式下才支持 , 所以在 Node.js 中一定要开启严格模式. &lt;/p&gt;
&lt;h3 id=&quot;u8BED_u6CD5&quot;&gt;&lt;a href=&quot;#u8BED_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h3&gt;&lt;p&gt;在Node.js中使用严格模式非常简单, 只需要在每个模块开头添加如下代码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;use strict&amp;quot;; 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;u4E25_u683C_u6A21_u5F0F_u4E0E_u975E_u4E25_u683C_u6A21_u5F0F_u7684_u5F02_u540C&quot;&gt;&lt;a href=&quot;#u4E25_u683C_u6A21_u5F0F_u4E0E_u975E_u4E25_u683C_u6A21_u5F0F_u7684_u5F02_u540C&quot; class=&quot;headerlink&quot; title=&quot;严格模式与非严格模式的异同&quot;&gt;&lt;/a&gt;严格模式与非严格模式的异同&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;u53D8_u91CF&quot;&gt;&lt;a href=&quot;#u53D8_u91CF&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h4&gt;&lt;p&gt;在严格模式下，什么时候创建变量以及怎么创建变量都是有限制的。首先，不允许意外创建全局变量。在非严格模式下，可以像下面这样创建全局变量：&lt;/p&gt;
&lt;p&gt;//未声明变量&lt;br&gt;//非严格模式：创建全局变量&lt;br&gt;//严格模式：抛出 ReferenceError  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;message = &amp;quot;Hello world! &amp;quot;; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即使 message 前面没有 var 关键字，即使没有将它定义为某个全局对象的属性，也能将 message 创建为全局变量。但在严格模式下，如果给一个没有声明的变量赋值，那代码在执行时就会抛出 ReferenceError。&lt;br&gt;其次，不能对变量调用 delete 操作符。非严格模式允许这样操作，但会静默失败（返回 false）。 而在严格模式下，删除变量也会导致错误 (注: delete只能删除属性, 不能删除变量, 未经声明的变量实际上是全局环境的属性而并不是全局变量)。&lt;/p&gt;
&lt;p&gt;//删除变量&lt;br&gt; //非严格模式：静默失败&lt;br&gt; //严格模式：抛出 ReferenceError &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var color = &amp;quot;red&amp;quot;; delete color;  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;严格模式下对变量名也有限制。特别地，不能使用 implements、interface、let、package、 private、protected、public、static 和 yield 作为变量名。这些都是保留字，将来的 ECMAScript 版本中可能会用到它们 (注: 新版本中已经部分用到了它们)。在严格模式下，用以上标识符作为变量名会导致语法错误。&lt;/p&gt;
&lt;h4 id=&quot;u5BF9_u8C61&quot;&gt;&lt;a href=&quot;#u5BF9_u8C61&quot; class=&quot;headerlink&quot; title=&quot;对象&quot;&gt;&lt;/a&gt;对象&lt;/h4&gt;&lt;p&gt;在严格模式下操作对象比在非严格模式下更容易导致错误。一般来说，非严格模式下会静默失败的情形，在严格模式下就会抛出错误。因此，在开发中使用严格模式会加大早发现错误的可能性。&lt;br&gt;在下列情形下操作对象的属性会导致错误:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为只读属性赋值会抛出 TypeError; &lt;/li&gt;
&lt;li&gt;对不可配置的（nonconfigurable）的属性使用 delete 操作符会抛出 TypeError;&lt;/li&gt;
&lt;li&gt;为不可扩展的（nonextensible）的对象添加属性会抛出 TypeError。 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用对象的另一个限制与通过对象字面量声明对象有关。在使用对象字面量时，属性名必须唯一。 例如：&lt;/p&gt;
&lt;p&gt;//重名属性&lt;br&gt;//非严格模式：没有错误，以第二个属性为准&lt;br&gt;//严格模式：抛出语法错误&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var person = {          
        name: &amp;quot;Nicholas&amp;quot;,        
        name: &amp;quot;Greg&amp;quot;           
   };  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   这里的对象 person 有两个属性，都叫 name。在非严格模式下，person 对象的 name 属性值是第 二个，而在严格模式下，这样的代码会导致语法错误。 &lt;/p&gt;
&lt;h4 id=&quot;u51FD_u6570&quot;&gt;&lt;a href=&quot;#u51FD_u6570&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h4&gt;&lt;p&gt;首先，严格模式要求命名函数的参数必须唯一。以下面这个函数为例：&lt;/p&gt;
&lt;p&gt;//重名参数&lt;br&gt;//非严格模式：没有错误，只能访问第二个参数&lt;br&gt;//严格模式：抛出语法错误    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function sum (num, num){
     //do something
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在非严格模式下，这个函数声明不会抛出错误。通过参数名只能访问第二个参数，要访问第一个参 数必须通过 arguments 对象。&lt;br&gt;在严格模式下，arguments 对象的行为也有所不同。在非严格模式下，修改命名参数的值也会反 映到 arguments 对象中，而严格模式下这两个值是完全独立的。例如：&lt;/p&gt;
&lt;p&gt;//修改命名参数的值&lt;br&gt;//非严格模式：修改会反映到 arguments 中&lt;br&gt;//严格模式：修改不会反映到 arguments 中&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function showValue(value){     
    value = &amp;quot;Foo&amp;quot;;      
    alert(value);        //&amp;quot;Foo&amp;quot;     
    alert(arguments[0]); //非严格模式：&amp;quot;Foo&amp;quot;                          
    //严格模式：&amp;quot;Hi&amp;quot; 
}  
showValue(&amp;quot;Hi&amp;quot;);  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上代码中，函数 showValue()只有一个命名参数 value。调用这个函数时传入了一个参数”Hi”， 这个值赋给了 value。而在函数内部，value 被改为”Foo”。在非严格模式下，这个修改也会改变 arguments[0]的值，但在严格模式下，arguments[0]的值仍然是传入的值。&lt;br&gt;另一个变化是淘汰了 arguments.callee 和 arguments.caller(注: 已被废弃)。在非严格模式下，这两个属 性一个引用函数本身，一个引用调用函数。而在严格模式下，访问哪个属性都会抛出 TypeError。 例如：&lt;/p&gt;
&lt;p&gt;//访问 arguments.callee&lt;br&gt;//非严格模式：没有问题&lt;br&gt;//严格模式：抛出 TypeError  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function factorial(num){     
    if (num &amp;lt;= 1) {         
        return 1;     
        } else {         
            return num * arguments.callee(num-1)     
        }
    }  
var result=factorial(5);  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;类似地，尝试读写函数的 caller 属性，也会导致抛出 TypeError。所以，对于上面的例子而言， 访问 factorial.caller 也会抛出错误。&lt;br&gt; 与变量类似，严格模式对函数名也做出了限制，不允许用 implements、interface、let、package、 private、protected、public、static 和 yield 作为函数名。&lt;br&gt; 对函数的最后一点限制，就是只能在脚本的顶级和在函数内部声明函数。也就是说，在 if 语句中 声明函数会导致语法错误：&lt;/p&gt;
&lt;p&gt;//在 if 语句中声明函数&lt;br&gt;//非严格模式：将函数提升到 if 语句外部&lt;br&gt;//严格模式：抛出语法错误  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (true){     
    function doSomething(){
            //...     
        } 
}  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在非严格模式下，以上代码能在所有浏览器中运行，但在严格模式下会导致语法错误    &lt;/p&gt;
&lt;h4 id=&quot;eval_28_29&quot;&gt;&lt;a href=&quot;#eval_28_29&quot; class=&quot;headerlink&quot; title=&quot;eval()&quot;&gt;&lt;/a&gt;eval()&lt;/h4&gt;&lt;p&gt;饱受诟病的 eval()函数在严格模式下也得到了提升。最大的变化就是它在包含上下文中不再创建 变量或函数。例如：&lt;/p&gt;
&lt;p&gt;//使用 eval()创建变量&lt;br&gt;//非严格模式：弹出对话框显示 10&lt;br&gt;//严格模式：调用 alert(x)时会抛出 ReferenceError &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function doSomething(){     
    eval(&amp;quot;var x=10&amp;quot;);     
    alert(x); 
}  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果是在非严格模式下，以上代码会在函数 doSomething()中创建一个局部变量 x，然后 alert() 还会显示该变量的值。但在严格模式下，在 doSomething()函数中调用 eval()不会创建变量 x，因此 调用 alert()会导致抛出 ReferenceError，因为 x 没有定义。&lt;br&gt; 可以在 eval()中声明变量和函数，但这些变量或函数只能在被求值的特殊作用域中有效，随后就 将被销毁。因此，以下代码可以运行，没有问题：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;use strict&amp;quot;; 
var result = eval(&amp;quot;var x=10, y=11; x+y&amp;quot;); 
alert(result); //21  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里在 eval()中声明了变量 x 和 y，然后将它们加在一起，返回了它们的和。于是，result 变 量的值是 21，即 x 和 y 相加的结果。而在调用 alert()时，尽管 x 和 y 已经不存在了，result 变量 的值仍然是有效的。 &lt;/p&gt;
&lt;h4 id=&quot;eval_u4E0Earguments&quot;&gt;&lt;a href=&quot;#eval_u4E0Earguments&quot; class=&quot;headerlink&quot; title=&quot;eval与arguments&quot;&gt;&lt;/a&gt;eval与arguments&lt;/h4&gt;&lt;p&gt;严格模式已经明确禁止使用 eval 和 arguments 作为标识符，也不允许读写它们的值。例如：&lt;/p&gt;
&lt;p&gt;//把 eval 和 arguments 作为变量引用&lt;br&gt;//非严格模式：没问题，不出错&lt;br&gt;//严格模式：抛出语法错误 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var eval = 10; 
var arguments = &amp;quot;Hello world!&amp;quot;; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在非严格模式下，可以重写 eval，也可以给 arguments 赋值。但在严格模式下，这样做会导致语 法错误。不能将它们用作标识符，意味着以下几种使用方式都会抛出语法错误:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 var 声明;&lt;/li&gt;
&lt;li&gt;赋予另一个值;&lt;/li&gt;
&lt;li&gt;尝试修改包含的值，如使用++;&lt;/li&gt;
&lt;li&gt;用作函数名;&lt;/li&gt;
&lt;li&gt;用作命名的函数参数;&lt;/li&gt;
&lt;li&gt;在 try-catch 语句中用作例外名&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;u6291_u5236this&quot;&gt;&lt;a href=&quot;#u6291_u5236this&quot; class=&quot;headerlink&quot; title=&quot;抑制this&quot;&gt;&lt;/a&gt;抑制this&lt;/h4&gt;&lt;p&gt;JavaScript 中一个最大的安全问题，也是最容易让人迷茫的地方，就是在某些情况下如何抑制 this 的值。在非严格模式下使用函数的 apply()或 call()方法时，null 或 undefined 值会被转换为全局 对象。而在严格模式下，函数的 this 值始终是指定的值，无论指定的是什么值。例如：&lt;/p&gt;
&lt;p&gt;//访问属性&lt;br&gt;//非严格模式：访问全局属性&lt;br&gt;//严格模式：抛出错误，因为 this 的值为 null&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var color = &amp;quot;red&amp;quot;;  
function displayColor(){     
    alert(this.color); 
}   
displayColor.call(null);  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上代码向displayColor.call()中传入了null，如果在是非严格模式下，这意味着函数的this 值是全局对象。结果就是弹出对话框显示”red”。而在严格模式下，这个函数的 this 的值是 null，因 此在访问 null 的属性时就会抛出错误。&lt;/p&gt;
&lt;h4 id=&quot;u5176_u4ED6_u53D8_u5316&quot;&gt;&lt;a href=&quot;#u5176_u4ED6_u53D8_u5316&quot; class=&quot;headerlink&quot; title=&quot;其他变化&quot;&gt;&lt;/a&gt;其他变化&lt;/h4&gt;&lt;p&gt;严格模式还有其他一些变化。&lt;br&gt;首先是抛弃了 with 语句。非严格模式下的 with 语句能够改变解析标识符的路径，但在严格模式下，with 被简化掉了。因此，在严格模式下使用 with 会导致语法错误。&lt;/p&gt;
&lt;p&gt;//with 的语句用法&lt;br&gt;//非严格模式：允许&lt;br&gt;//严格模式：抛出语法错误  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;with(location){     
    alert(href); 
}  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;严格模式也去掉了 JavaScript中的八进制字面量。以 0开头的八进制字面量过去经常会导致很多错 误。在严格模式下，八进制字面量已经成为无效的语法了。&lt;/p&gt;
&lt;p&gt;//使用八进制字面量&lt;br&gt;//非严格模式：值为 8&lt;br&gt;//严格模式：抛出语法错误 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var value = 010;  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ECMAScript 5也修改了严格模式下 parseInt()的行为。如今，八进制字面量在 严格模式下会被当作以 0开头的十进制字面量。例如：&lt;/p&gt;
&lt;p&gt;//使用 parseInt()解析八进制字面量&lt;br&gt;//非严格模式：值为 8&lt;br&gt;//严格模式：值为 10 (注: 在 ECMAScript 5中，即使是在非严格模式下也会如此。) &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var value = parseInt(&amp;quot;010&amp;quot;);  
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u5F15_u7528&quot;&gt;&lt;a href=&quot;#u5F15_u7528&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h3&gt;&lt;p&gt;本页内容引用自&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;JavaScript高级程序设计（第3版）--------
    
    </summary>
    
      <category term="NODEJS" scheme="http://HeartWalker.cc/categories/NODEJS/"/>
    
    
  </entry>
  
</feed>
